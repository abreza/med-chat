services:
  nginx:
    image: nginx:alpine
    container_name: medical-ai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - core
      - tts-service
      - asr-service
    restart: unless-stopped
    networks:
      - medical-ai-network

  certbot:
    image: certbot/certbot
    container_name: medical-ai-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email a.re.morteza@gmail.com --agree-tos --no-eff-email -d med.aistudio.ir
    depends_on:
      - nginx
    networks:
      - medical-ai-network

  certbot-renew:
    image: certbot/certbot
    container_name: medical-ai-certbot-renew
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: sh -c "trap exit TERM; while :; do certbot renew --webroot --webroot-path=/var/www/certbot; sleep 12h & wait $${!}; done;"
    restart: unless-stopped
    depends_on:
      - nginx
    networks:
      - medical-ai-network

  tts-service:
    build: ./tts-service
    container_name: medical-ai-tts
    expose:
      - "8001"
    env_file:
      - ./tts-service/.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - medical-ai-network

  asr-service:
    build: ./asr-service
    container_name: medical-ai-asr
    expose:
      - "8002"
    env_file:
      - ./asr-service/.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - medical-ai-network

  core:
    build: 
      context: ./core
      args:
        REBUILD_MEDCHATINPUT: false
    container_name: medical-ai-core
    expose:
      - "7860"
    env_file:
      - ./core/.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7860"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    networks:
      - medical-ai-network

networks:
  medical-ai-network:
    driver: bridge

volumes:
  certbot-conf:
  certbot-www:
